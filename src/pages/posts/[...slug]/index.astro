---
import { type CollectionEntry, getCollection } from "astro:content";
import PostDetails from "@/layouts/PostDetails.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { getPath } from "@/utils/getPath";

export interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }: { data: CollectionEntry<'blog'>['data'] }) => !data.draft);
  const postResult = posts.map((post: CollectionEntry<'blog'>) => ({
    params: { slug: getPath(post.id, post.filePath, false) },
    props: { post },
  }));

  return postResult;
}

const { post } = Astro.props;

const posts = await getCollection("blog");
const sortedPosts = getSortedPosts(posts);
---

<PostDetails
  post={post}
  posts={sortedPosts}
  {...(post.data.quranVerses ? { quranVerses: post.data.quranVerses } : {})}
  {...(post.data.quranShowTransliteration ? { quranShowTransliteration: post.data.quranShowTransliteration } : {})}
  {...(post.data.quranShowTranslation ? { quranShowTranslation: post.data.quranShowTranslation } : {})}
  {...(post.data.quranTranslationIds ? { quranTranslationIds: post.data.quranTranslationIds } : {})}
  {...(post.data.quranSurahNameLanguage ? { quranSurahNameLanguage: post.data.quranSurahNameLanguage } : {})}
  {...(post.data.quranClient ? { quranClient: post.data.quranClient } : {})}
/>
